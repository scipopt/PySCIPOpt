name: Integration test

env:
  version: 7.0.3

# runs only on branches; doesn't run on tags.
on:
  push:
    branches:
      - '**'

jobs:

  #  Integration-test:
  #    runs-on: ubuntu-18.04
  #    strategy:
  #      fail-fast: true
  #      matrix:
  #        python-version: [3.6, 3.7, 3.8, 3.9]
  #    steps:
  #      - uses: actions/checkout@v2
  #
  #      - name: Install dependencies (SCIPOptSuite)
  #        run: |
  #          wget --quiet --no-check-certificate https://scipopt.org/download/release/SCIPOptSuite-${{ env.version }}-Linux-ubuntu.deb
  #          sudo apt-get update && sudo apt install -y ./SCIPOptSuite-${{ env.version }}-Linux-ubuntu.deb
  #
  #      - name: Setup python ${{ matrix.python-version }}
  #        uses: actions/setup-python@v2
  #        with:
  #          python-version: ${{ matrix.python-version }}
  #
  #      - name: Prepare python environment
  #        run: |
  #          python -m pip install --upgrade pip
  #          python -m pip install wheel cython networkx pytest-cov
  #
  #      - name: Install PySCIPOpt
  #        run: python -m pip install .
  #
  #      - name: Run pyscipopt tests
  #        run: |
  #          py.test
  #
  #  Windows-test:
  #    env:
  #      SCIPOPTDIR: C:\scipoptdir
  #    runs-on: windows-latest
  #    strategy:
  #      matrix:
  #        python-version: [3.8, 3.9]
  #    steps:
  #      - uses: actions/checkout@v2
  #
  #      - name: Download dependencies (SCIPOptSuite)
  #        shell: powershell
  #        run: wget https://scipopt.org/download/release/SCIPOptSuite-${{ env.version }}-win64-VS15.exe -outfile scipopt-installer.exe
  #
  #      - name: Install dependencies (SCIPOptSuite)
  #        shell: cmd
  #        run: scipopt-installer.exe /S /D=${{ env.SCIPOPTDIR }}
  #
  #      - name: Setup python ${{ matrix.python-version }}
  #        uses: actions/setup-python@v2
  #        with:
  #          python-version: ${{ matrix.python-version }}
  #
  #      - name: Prepare python environment
  #        shell: powershell
  #        run: |
  #          python -m pip install --upgrade pip
  #          python -m pip install wheel cython networkx pytest-cov
  #
  #      - name: Install PySCIPOpt
  #        shell: powershell
  #        run: |
  #          $Env:SCIPOPTDIR = "${{ env.SCIPOPTDIR }}"
  #          python -m pip install .
  #
  #      - name: Run pyscipopt tests
  #        shell: powershell
  #        run: |
  #          py.test

  ### working but not optimal way to make pyscipopt compile and pass the tests on mac
  # MacOS-test:
  #   runs-on: macos-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.9]
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Install dependencies (SCIPOptSuite)
  #       run: |
  #         brew install tbb@2020 boost
  #         ls /usr/local/opt/tbb@2020/lib
  #         wget --quiet --no-check-certificate https://scipopt.org/download/release/scipoptsuite-${{ env.version }}.tgz
  #         tar xfz scipoptsuite-${{ env.version }}.tgz
  #         cd scipoptsuite-${{ env.version }}
  #         mkdir build
  #         cd build
  #         sed -i -e 's/ tbb libtbb.so.2 / tbb.a /' ../papilo/cmake/Modules/FindTBB.cmake
  #         cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/scipoptsuite -DIPOPT=off -DSYM=none -DREADLINE=off -DTBB_LIBRARY_DIR=/usr/local/opt/tbb@2020/lib
  #         make install -j

  #     - name: Setup python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Prepare python environment
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install wheel cython networkx pytest-cov pytest

  #     - name: Install PySCIPOpt
  #       run: |
  #         export SCIPOPTDIR=${GITHUB_WORKSPACE}/scipoptsuite/
  #         export DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${GITHUB_WORKSPACE}/scipoptsuite/lib
  #         python -m pip install .

  #     - name: Run pyscipopt tests
  #       run: |
  #         export SCIPOPTDIR=${GITHUB_WORKSPACE}/scipoptsuite/
  #         export DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${GITHUB_WORKSPACE}/scipoptsuite/lib
  #         py.test

  MacOS-test:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies (SCIPOptSuite)
        run: |
          brew search valgrind
          brew install valgrind
          wget --quiet --no-check-certificate https://scipopt.org/download/SCIPOptSuite-${{ env.version }}-Darwin-Ipopt-gcc10.sh
          bash SCIPOptSuite-${{ env.version }}-Darwin-Ipopt-gcc10.sh --skip-license --prefix=${GITHUB_WORKSPACE}/scipoptsuite/
          ./scipoptsuite/bin/scip -v
          wget http://miplib2017.zib.de/WebData/instances/enlight_hard.mps.gz
          wget http://minlplib.org/osil/elf.osil
          ./scipoptsuite/bin/scip -f enlight_hard.mps.gz
          ./scipoptsuite/bin/scip -f elf.osil
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Prepare python environment
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel cython networkx pytest-cov pytest
      - name: Install PySCIPOpt
        run: |
          export SCIPOPTDIR=${GITHUB_WORKSPACE}/scipoptsuite/
          export DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${GITHUB_WORKSPACE}/scipoptsuite/lib
          python -m pip install .
      - name: Run pyscipopt tests
        run: |
          export SCIPOPTDIR=${GITHUB_WORKSPACE}/scipoptsuite/
          export DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${GITHUB_WORKSPACE}/scipoptsuite/lib
          py.test
